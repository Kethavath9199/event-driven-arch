:host {
  --height: 20rem;
  --line-height: 6rem;
  --dot-height: 0.75rem;
  --ball-height: 2rem;
  --chain-item-width: max(20%, 200px);
  --line-thickness: 2px;
}

.wrapper {
  border-top: 1px solid rgba(0, 0, 0, 0.2);
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
  padding: 1rem 0 1rem 0;
  overflow-x: auto;
  height: calc(var(--height) + 2rem);
  scrollbar-width: thin;
}

/*RJ: can these scrollers be generalised or shared ?*/
.wrapper::-webkit-scrollbar {
  height: 8px;
}

.wrapper::-webkit-scrollbar-track {
  background: #fff;
}
.wrapper::-webkit-scrollbar-thumb {
  background: var(--grey-medium-dark);
  border-radius: 6px;
}
.wrapper::-webkit-scrollbar-thumb:hover {
  background: var(--grey-medium-light);
}

/*Wrapper for whole chain*/
.chain {
  display: flex;
  counter-reset: chain;
  height: calc(var(--height) * 0.5 - 2rem);
  width: 100vw;
}

/*Wrapper for each chain item*/
.chain-item {
  position: relative;
  height: calc(var(--line-height) + var(--dot-height));
  min-width: var(--chain-item-width);
  border-bottom: var(--line-thickness) solid var(--red);
  padding-left: var(--chain-item-width);
  margin-left: calc(var(--chain-item-width) * -1);
}
.chain-item:first-of-type,
.chain-item:last-of-type {
  border: none;
}

/*Event ball*/
.chain-item::before {
  border-left: 1px solid var(--red);
  position: absolute;
  left: calc(50% - var(--ball-height) * 0.5);
  bottom: -1rem;
  width: var(--ball-height);
  height: var(--ball-height);
  z-index: 2;
  border-radius: 50%;
  text-align: center;
  font-size: 1rem;
  line-height: 1.5rem;
  color: var(--red);
  background: var(--red);
  content: '';
}

/*Add number to ball*/
.normal::before {
  counter-increment: chain;
  content: counter(chain);
  background: #fff;
  border: 1px solid var(--grey-medium-light);
  color: var(--grey-darker);
}

.info-group {
  display: flex;
  flex-direction: column;
  position: absolute;
  padding: 0rem 1.25rem;
}

.chain-item:nth-of-type(even) .info-group {
  z-index: 1;
  top: calc(calc(var(--line-height)) * 2 + var(--dot-height));
}

/*Vertical line*/
.info-group::after {
  background-color: var(--red);
  width: var(--line-thickness);
  content: '';
  height: var(--line-height);
  position: absolute;
  left: 0rem;
  top: calc(var(--dot-height) + 2px);
}

.chain-item:nth-of-type(even) .info-group::after {
  top: calc(var(--line-height) * -1 - 2px);
}

.event-type {
  display: inline-block;
  background: var(--grey-medium-light);
  padding: 0rem 0.5rem;
  border-radius: var(--border-radius);
  position: relative;
  white-space: nowrap;
  margin: 0px;
  margin-bottom: 0.5rem;
}

/*Dot before text box*/
.event-type::before {
  content: '';
  width: var(--dot-height);
  height: var(--dot-height);
  border-radius: 50%;
  background: var(--grey-medium-light);
  position: absolute;
  left: calc(-1.5rem - 0.5px);
}

.event-date {
  color: rgba(0, 0, 0, 0.6);
  white-space: nowrap;
  margin: 0rem;
}

.normal + .error {
  counter-reset: reversed(errors);
}

.error {
  counter-increment: errors -1;
  border: 0px;
}

.error + .error {
  width: 0px;
  height: 0px;
  border: none;
}

.error + .error > * {
  display: none;
}

.error + .error::before {
  display: none;
}

.error + .error .border-horizontal {
  border: none;
}

.include-counter .event-type::after {
  content: counter(errors) ' Errors';
}
