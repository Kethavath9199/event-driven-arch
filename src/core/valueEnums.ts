export enum YesNo {
  Yes = 'Y',
  No = 'N',
}

export enum ValidationResult {
  Pass = 'PASS',
  Fail = 'FAIL',
}

export enum LookupType {
  Order = 'Order',
  ConfirmReturn = 'ConfirmReturnDelivery',
  ReturnOrder = 'ReturnOrder',
  CancelOrder = 'CancelOrder',
  UpdateOrder = 'UpdateOrder',
  HLDocumentTracking = 'documenttracking',
  HLDeclarationMapping = 'declaration_json_mapping',
  HLClaimRequest = 'claim_request',
  HLInvoiceData = 'invoice_data',
  HLOrderData = 'order_data',
  Error = 'error',
}

export enum ModeType {
  Basic = 'B',
  Final = 'F',
  Update = 'U',
  Cancel = 'C',
  Return = 'R',
}

export const declarationType: Record<string, string> = {
  '2': 'Submitted',
  '6': 'Cleared',
  '7': 'Clearance subject to Inspection',
  '8': 'Release for Inspection',
  '9': 'Detained',
  '10': 'Suspend',
  '14': 'Cancelled',
  '15': 'Declined',
  '16': 'Rejected',
  '500': 'Error',
};

export const ClaimType: Record<string, string> = {
  '102': 'Registered',
  '103': 'Approved',
  '109': 'Rejected',
};

export enum PaymentInstrumentType {
  Cash = 1,
  TT = 2, //Telex transfer
  LC = 3, //Letter of credit
  EP = 4, //Electronic payment
  Other = 5,
  Draft = 6,
  BankTransfer = 7,
  DAC = 8, //doc against accept
  DAP = 9, //doc against payment
  Courier = 10,
}

export enum InvoiceType {
  CommercialInvoice = 1,
  Invoice = 2,
  ProFormaInvoice = 3,
  SalesInvoice = 4,
  TradeInvoice = 5,
  Other = 6,
  DeliveryInvoice = 7,
  TransferInvoice = 8,
}

export enum Direction {
  Outbound = '1',
  Return = '2',
}

export enum RegimeType {
  Import = '1',
  Export = '2',
  Transit = '3',
  TemporaryAdmission = '4',
  Transfer = '5',
}

export enum Country {
  AircraftStores = 'AC',
  Andorra = 'AD',
  UnitedArabEmirates = 'AE',
  Afghanistan = 'AF',
  AntiguaAndBarbuda = 'AG',
  Anguilla = 'AI',
  Albania = 'AL',
  Armenia = 'AM',
  NetherlandsAntilles = 'AN',
  Angola = 'AO',
  Antarctica = 'AQ',
  Argentina = 'AR',
  AmericanSamoa = 'AS',
  Austria = 'AT',
  Australia = 'AU',
  Aruba = 'AW',
  AlandIslands = 'AX',
  Azerbaijan = 'AZ',
  BosniaAndHerzegovina = 'BA',
  Barbados = 'BB',
  Bangladesh = 'BD',
  Belgium = 'BE',
  BurkinaFaso = 'BF',
  Bulgaria = 'BG',
  Bahrain = 'BH',
  Burundi = 'BI',
  Benin = 'BJ',
  Bermuda = 'BM',
  BruneiDarussalam = 'BN',
  Bolivia = 'BO',
  Brazil = 'BR',
  Bahamas = 'BS',
  Bhutan = 'BT',
  BouvetIsland = 'BV',
  Botswana = 'BW',
  Belarus = 'BY',
  Belize = 'BZ',
  Canada = 'CA',
  CocosKeelingIslands = 'CC',
  CongoTheDemocraticRepublicOfTheFormerlyZaire = 'CD',
  CentralAfricanRepublic = 'CF',
  CongoRepublicOfCongo = 'CG',
  SwitzerlandConfederationOfHelvetia = 'CH',
  CoteDIvoireIvoryCoast = 'CI',
  CookIslands = 'CK',
  Chile = 'CL',
  Cameroon = 'CM',
  China = 'CN',
  Colombia = 'CO',
  CostaRica = 'CR',
  Cuba = 'CU',
  CapeVerde = 'CV',
  ChristmasIsland = 'CX',
  Cyprus = 'CY',
  CzechRepublic = 'CZ',
  DutyFreeDutyFreeShopUae = 'DD',
  DutyFreeShopSaudiArabia = 'D1',
  DutyFreeShopKuwait = 'D2',
  DutyFreeShopQatar = 'D3',
  DutyFreeShopOman = 'D4',
  DutyFreeShopBahrain = 'D5',
  GermanyDeutschland = 'DE',
  Djibouti = 'DJ',
  Denmark = 'DK',
  Dominica = 'DM',
  DominicanRepublic = 'DO',
  Algeria = 'DZ',
  Ecuador = 'EC',
  Estonia = 'EE',
  Egypt = 'EG',
  WesternSaharaFormerlySpanishSahara = 'EH',
  Eritrea = 'ER',
  Spain = 'ES',
  Ethiopia = 'ET',
  Finland = 'FI',
  Fiji = 'FJ',
  FalklandIslandsMalvinas = 'FK',
  MicronesiaFederatedStatesOfMicronesia = 'FM',
  FaeroeIslands = 'FO',
  France = 'FR',
  Gabon = 'GA',
  UnitedKingdomGreatBritain = 'GB',
  Grenada = 'GD',
  Georgia = 'GE',
  FrenchGuiana = 'GF',
  Guernsey = 'GG',
  Ghana = 'GH',
  Gibraltar = 'GI',
  Greenland = 'GL',
  GambiaThe = 'GM',
  Guinea = 'GN',
  Guadeloupe = 'GP',
  EquatorialGuinea = 'GQ',
  Greece = 'GR',
  SouthGeorgiaAndTheSouthSandwichIslands = 'GS',
  Guatemala = 'GT',
  Guam = 'GU',
  GuineaBissau = 'GW',
  Guyana = 'GY',
  HongKongSpecialAdministrativeRegionOfChina = 'HK',
  HeardIslandAndMcdonaldIslands = 'HM',
  Honduras = 'HN',
  CroatiaHrvatska = 'HR',
  Haiti = 'HT',
  Hungary = 'HU',
  Indonesia = 'ID',
  Ireland = 'IE',
  Israel = 'IL',
  IsleOfMan = 'IM',
  India = 'IN',
  BritishIndianOceanTerritory = 'IO',
  Iraq = 'IQ',
  IranIslamicRepublicOfIran = 'IR',
  Iceland = 'IS',
  Italy = 'IT',
  Jersey = 'JE',
  Jamaica = 'JM',
  JordanHashemiteKingdomOfJordan = 'JO',
  Japan = 'JP',
  Kenya = 'KE',
  Kyrgyzstan = 'KG',
  Cambodia = 'KH',
  Kiribati = 'KI',
  Comoros = 'KM',
  SaintKittsAndNevis = 'KN',
  KoreaDemocraticPeoplesRepublicOfNorthKorea = 'KP',
  KoreaRepublicOfSouthKorea = 'KR',
  Kuwait = 'KW',
  CaymanIslands = 'KY',
  Kazakhstan = 'KZ',
  LaoPeopleSDemocraticRepublic = 'LA',
  Lebanon = 'LB',
  SaintLucia = 'LC',
  LiechtensteinFurstentumLiechtenstein = 'LI',
  SriLankaFormerlyCeylon = 'LK',
  Liberia = 'LR',
  Lesotho = 'LS',
  Lithuania = 'LT',
  Luxembourg = 'LU',
  Latvia = 'LV',
  LibyaLibyanArabJamahirya = 'LY',
  Morocco = 'MA',
  Monaco = 'MC',
  Moldova = 'MD',
  Montenegro = 'ME',
  Madagascar = 'MG',
  MarshallIslands = 'MH',
  MacedoniaFormerYugoslavRepublicOfMacedonia = 'MK',
  Mali = 'ML',
  MyanmarFormerlyBurma = 'MM',
  Mongolia = 'MN',
  MacaoSpecialAdministrativeRegionOfChina = 'MO',
  NorthernMarianaIslands = 'MP',
  Martinique = 'MQ',
  Mauritania = 'MR',
  Montserrat = 'MS',
  Malta = 'MT',
  Mauritius = 'MU',
  Maldives = 'MV',
  Malawi = 'MW',
  Mexico = 'MX',
  Malaysia = 'MY',
  MozambiqueMocambique = 'MZ',
  Namibia = 'NA',
  NewCaledonia = 'NC',
  Niger = 'NE',
  NorfolkIsland = 'NF',
  Nigeria = 'NG',
  Nicaragua = 'NI',
  Netherlands = 'NL',
  Norway = 'NO',
  Nepal = 'NP',
  Nauru = 'NR',
  Niue = 'NU',
  NewZealand = 'NZ',
  Oman = 'OM',
  Panama = 'PA',
  Peru = 'PE',
  FrenchPolynesia = 'PF',
  PapuaNewGuinea = 'PG',
  Philippines = 'PH',
  Pakistan = 'PK',
  Poland = 'PL',
  SaintPierreAndMiquelon = 'PM',
  Pitcairn = 'PN',
  PuertoRico = 'PR',
  PalestinianTerritories = 'PS',
  Portugal = 'PT',
  Palau = 'PW',
  Paraguay = 'PY',
  Qatar = 'QA',
  Reunion = 'RE',
  Romania = 'RO',
  SerbiaRepublicOfSerbia = 'RS',
  RussianFederation = 'RU',
  Rwanda = 'RW',
  SaudiArabiaKingdomOfSaudiArabia = 'SA',
  SolomonIslands = 'SB',
  Seychelles = 'SC',
  Sudan = 'SD',
  Sweden = 'SE',
  Singapore = 'SG',
  SaintHelena = 'SH',
  Slovenia = 'SI',
  SvalbardAndJanMayen = 'SJ',
  SlovakiaSlovakRepublic = 'SK',
  SierraLeone = 'SL',
  SanMarinoRepublicOf = 'SM',
  Senegal = 'SN',
  Somalia = 'SO',
  Suriname = 'SR',
  ShipStores = 'SS',
  SaoTomeAndPrincipe = 'ST',
  ElSalvador = 'SV',
  SyrianArabRepublic = 'SY',
  Swaziland = 'SZ',
  TurksAndCaicosIslands = 'TC',
  ChadTchad = 'TD',
  FrenchSouthernTerritories = 'TF',
  Togo = 'TG',
  Thailand = 'TH',
  Tajikistan = 'TJ',
  Tokelau = 'TK',
  TimorLesteFormerlyEastTimor = 'TL',
  Turkmenistan = 'TM',
  Tunisia = 'TN',
  Tonga = 'TO',
  Turkey = 'TR',
  TrinidadAndTobago = 'TT',
  Tuvalu = 'TV',
  TaiwanChineseTaipeiForIoc = 'TW',
  Tanzania = 'TZ',
  Ukraine = 'UA',
  Uganda = 'UG',
  UnitedStatesMinorOutlyingIslands = 'UM',
  UnitedStates = 'US',
  Uruguay = 'UY',
  Uzbekistan = 'UZ',
  VaticanCityHolySee = 'VA',
  SaintVincentAndTheGrenadines = 'VC',
  Venezuela = 'VE',
  VirginIslandsBritish = 'VG',
  VirginIslandsUS = 'VI',
  VietNam = 'VN',
  Vanuatu = 'VU',
  WallisAndFutuna = 'WF',
  SamoaFormerlyWesternSamoa = 'WS',
  InstallationsInInternationalWater = 'XZ',
  YemenYemenArabRepublic = 'YE',
  Mayotte = 'YT',
  SouthAfricaZuidAfrika = 'ZA',
  ZambiaFormerlyNorthernRhodesia = 'ZM',
  Zimbabwe = 'ZW',
}

export enum Currencies {
  UaeDirham = 'AED',
  Afghani = 'AFA',
  CameroonFranc = 'AFR',
  Albanian = 'ALL',
  NethGuilder = 'ANG',
  ArgentinePeso = 'ARS',
  AustSchilling = 'ATS',
  AustralianDollar = 'AUD',
  ArubanGuilder = 'AWG',
  AzerbaijanManat = 'AZM',
  BarbodasDollar = 'BBD',
  BanglaTaka = 'BDT',
  BelgianFranc = 'BEF',
  BulgariaLev = 'BGL',
  BahrainDinar = 'BHD',
  BurundiFrank = 'BIF',
  BermudaDollar = 'BMD',
  BruneiDollar = 'BND',
  BrazilCruzado = 'BRC',
  BrazilianReal = 'BRR',
  BahamasDollar = 'BSD',
  Ngultrum = 'BTN',
  BurmaKyat = 'BUK',
  CanadianDollar = 'CAD',
  SwissFranc = 'CHF',
  ChinaRenminbi = 'CNR',
  ColombianPeso = 'COP',
  NicarguaCordba = 'COR',
  CzechKoruna = 'CSK',
  CubanPeso = 'CUP',
  CyprusPound = 'CYP',
  Czechkoruna = 'CZK',
  GermanOustmark = 'DDM',
  DuescheMark = 'DEM',
  DjiboutiFranc = 'DJF',
  DanishKroner = 'DKK',
  AlgerianDinar = 'DZD',
  EcuaodrSucer = 'ECS',
  EgyptianPound = 'EGP',
  SpanishPesta = 'ESP',
  EthiopiaBirr = 'ETB',
  EuropeUnion = 'EUR',
  FinlandMark = 'FIM',
  FijiDollar = 'FJD',
  FrenchFranc = 'FRF',
  PoundSterling = 'GBP',
  GhanaCedi = 'GHC',
  GibralterPound = 'GIP',
  GreekDrackma = 'GRD',
  GautmalaQetzal = 'GTQ',
  HKDollar = 'HKD',
  HondrasLempira = 'HNL',
  HungaryForint = 'HUF',
  IndonesaRupiah = 'IDR',
  IrishPound = 'IEP',
  IndianRupee = 'INR',
  IraqiDinar = 'IQD',
  IraniRial = 'IRR',
  IcelandKrona = 'ISK',
  ItalianLira = 'ITL',
  JamaicanDollar = 'JMD',
  JordanDinar = 'JOD',
  JapaneseYen = 'JPY',
  KenyaShilling = 'KES',
  LaosKip = 'KIP',
  KoreanWon = 'KRW',
  KuwaitiDinar = 'KWD',
  KazakhstanTenge = 'KZT',
  LebanesePound = 'LBP',
  SrilankanRupee = 'LKR',
  LiberianDollar = 'LRD',
  LithuanianLitas = 'LTL',
  LuxemborgFranc = 'LUF',
  LibyanDinar = 'LYD',
  MoroccoDirham = 'MAD',
  MalacacheFranc = 'MGF',
  MaltaLira = 'MTL',
  MaurRupee = 'MUR',
  MaldiveRufiyaa = 'MVR',
  MalawiKwacha = 'MWK',
  MexicannPeso = 'MXN',
  MalaysiaRingit = 'MYR',
  MozabiqMetical = 'MZM',
  Na = 'NA',
  NamibianDollar = 'NAD',
  NigerianNaira = 'NGN',
  Cordoba = 'NIU',
  DutchGuilder = 'NLG',
  NorwayKroner = 'NOK',
  NepalRupee = 'NPR',
  NzlandDollar = 'NZD',
  OmanRial = 'OMR',
  Balboa = 'PAB',
  PhpPeso = 'PHP',
  PakRupee = 'PKR',
  PolandZloty = 'PLZ',
  PortugalEscudo = 'PTE',
  QatarRiyal = 'QAR',
  RomaniaLeu = 'ROL',
  RussianRouble = 'RUB',
  SaudiRiyal = 'SAR',
  SeychelesRupee = 'SCR',
  SudaneseDinar = 'SDD',
  SudanPound = 'SDP',
  SwedishKroner = 'SEK',
  SingporeDollar = 'SGD',
  Leone = 'SLL',
  SomaliaShiling = 'SOS',
  UssrRouble = 'SUR',
  ElSalvador = 'SVC',
  SyrianPound = 'SYP',
  SwaziLilangeni = 'SZL',
  ThailandBhat = 'THB',
  TunisianDollar = 'TND',
  TurkishLira = 'TRL',
  TaiwanDollar = 'TWD',
  TanzaSchilling = 'TZS',
  UganSchillings = 'UGX',
  UsDollar = 'USD',
  UruguayPeso = 'UYP',
  UzbekistanSum = 'UZS',
  VenezulaBolver = 'VEB',
  CentralAfricanCfaFranc = 'XAF',
  YemenDinar = 'YDD',
  YemenRiyal = 'YER',
  YugoslavDinar = 'YUD',
  SouthAfricaRand = 'ZAR',
  ZambiaKwacha = 'ZMK',
  Zaire = 'ZRZ',
  ZimbabweDollar = 'ZWD',
}

export enum IncoTermCode {
  CostInsuranceFreight = 'CIF',
  CostFreight = 'CFR',
  FreeOnBoardVessel = 'FOB',
  CarriageInsurancePaidTo = 'CIP',
  CarriagePaidTo = 'CPT',
  DeliveredAtFrontier = 'DAF',
  DeliveredDutyPaid = 'DDP',
  DeliveredDutyUnpaid = 'DDU',
  DeliveredExQuaiDutyPaid = 'DEQ',
  DeliveredExShip = 'DES',
  ExWork = 'EXW',
  FreeAlongsideShip = 'FAS',
  FreeCarrier = 'FCA',
  DeliveredAtPlace = 'DAP',
  DeliveredAtTerminal = 'DAT',
}

export enum FreeZoneCode {
  JebelAli = '1',
  DucamzFreeZone = '2',
  AirportFreeZone = '3',
  DubaiMediaCity = '4',
  DubaiInternetCity = '5',
  DMCC = '6',
  FinanceCity = '7',
  DubaiHealthCity = '8',
  Texmas = '9',
  DubaiSiliconOasis = '10',
  ShuwaikhPort = '11',
  SalalahFreeZone = '12',
  DubaiLogisticCity = '13',
  DubaiWorldTradeCenter = '15', //TODO verify no 14 in excel
  DubaiDesignDistrict = '16',
  AviationDistrict = '17',
  Expo2020 = '18',
}

export enum CargoOwnership {
  SelfOwnership = '1',
  OtherCompanyOwnership = '2',
}

export enum UnitOfMeasurement {
  Kilogram = 'kg',
  Carat = 'carat',
  Meters = 'm',
  SquareMeters = 'm2',
  CubicMeters = 'm3',
  Liters = 'l',
  KilowattHours = 'kwh',
  Units = 'u',
  Pairs = '2u',
  Dozen = '12u',
  OneThousandUnits = '1000u',
  Packs = 'pack',
}

export enum GoodsCondition {
  New = 'N',
  Used = 'U',
}

export enum VehicleCondition {
  New = 'N',
  Old = 'O',
}

export enum VehicleDrive {
  LeftHand = 'L',
  RightHand = 'R',
  NotApplicable = 'N',
}

export enum VehicleType {
  TwoWD = '2WD',
  FourWD = '4WD',
  AllTerrain = 'ALT',
  AutoRiksha = 'AUT',
  Bulldozer = 'BDZ',
  Bucket = 'BKT',
  Bomag = 'BMG',
  Boom = 'BOM',
  Buggy = 'BUG',
  Bus = 'BUS',
  Car = 'CAR',
  ConPump = 'CMP',
  ConMixer = 'CMX',
  Compactor = 'COM',
  Crane = 'CRN',
  Cart = 'CRT',
  DrillingRig = 'DRG',
  Dumper = 'DMP',
  Excavator = 'EXC',
  Finisher = 'FIN',
  Forklift = 'FRK',
  Grader = 'GRD',
  Hatchback = 'HCH',
  Jeep = 'JEP',
  Jetski = 'JTS',
  Loader = 'LOD',
  MiniBus = 'MBU',
  MotorCycle = 'MCY',
  MiniTruck = 'MTK',
  Other = 'OTH',
  Paver = 'PAV',
  PickUp = 'PIK',
  Roller = 'ROL',
  Scooter = 'SCT',
  Shovel = 'SHO',
  StationWagon = 'STW',
  Sweeper = 'SWP',
  Tractor = 'TRC',
  Truck = 'TRK',
  Trailer = 'TRL',
  Van = 'VAN',
  Vibrator = 'VIB',
  Wagon = 'WAG',
}

export enum VehicleBrand {
  Acura = 1,
  AmGeneral = 2,
  AstonMartin = 3,
  Audi = 4,
  Bentley = 5,
  Bmw = 6,
  Buick = 7,
  Cadillac = 8,
  Chevrolet = 9,
  Chrysler = 10,
  Daewoo = 11,
  Dodge = 12,
  Ferrari = 13,
  Fiat = 14,
  Ford = 15,
  GeneralMotors = 16,
  Gmc = 17,
  Honda = 18,
  Hyundai = 19,
  Infiniti = 20,
  Isuzu = 21,
  Jaguar = 22,
  Jeep = 23,
  Kia = 24,
  LandRover = 25,
  Lexus = 26,
  Lincoln = 27,
  Lotus = 28,
  Mazda = 29,
  MercedesBenz = 30,
  Mercury = 31,
  Mitsubishi = 32,
  Nissan = 33,
  Oldsmobile = 34,
  Plymouth = 35,
  Pontiac = 36,
  Porsche = 37,
  RollsRoyce = 38,
  Saab = 39,
  Saturn = 40,
  Seat = 41,
  Subaru = 42,
  Suzuki = 43,
  Toyota = 44,
  Volkswagen = 45,
  Volvo = 46,
  Hino = 47,
  Opel = 48,
  Hilux = 49,
  Cherokee = 50,
  Datsun = 51,
  Renault = 52,
  Daihatsu = 53,
  Lancia = 54,
  Sprinter = 55,
  Golf = 56,
  Rover = 57,
  Caterpillar = 58,
  Morris = 59,
  Cat = 60,
  Citroen = 61,
  YamahaBike = 62,
  Daimler = 63,
  Peaugeot = 64,
  Komatsu = 65,
  AlfaRomeo = 66,
  Tcm = 67,
  Kawasaki = 68,
  Mesefargson = 69,
  MekongStar = 70,
  Wrangler = 71,
  Primemover = 72,
  Tadano = 73,
  Bomberdier = 74,
  Seeaturn = 75,
  AsiaCombi = 76,
  MiniCooper = 77,
  Smart = 78,
  Ssangyong = 79,
  Raymond = 80,
  Kobelco = 81,
  Kubota = 82,
  RangeRover = 83,
  Eliminator = 84,
  Tianye = 85,
  Proton = 86,
  Iseki = 87,
  Scania = 88,
  Mg = 89,
  Bertone = 90,
  Maserati = 91,
  Samsung = 92,
  Hitachi = 93,
  Lamborghini = 94,
  Jcb = 95,
  Freightliner = 96,
  Kato = 97,
  Perdua = 99,
  Admiral = 100,
  AeronautcHaice = 101,
  AichiManlift = 102,
  AllisChalmers = 103,
  American = 104,
  Amg = 105,
  Amman = 106,
  Ankai = 107,
  Apbilia = 108,
  Aquila = 109,
  Aria = 110,
  AshokLeyland = 111,
  Asia = 112,
  Atlas = 113,
  Atomix = 114,
  Ausa = 115,
  Austin = 116,
  Awm = 117,
  Bajaj = 118,
  Baoli = 119,
  BaotouBeisang = 120,
  BarberGreen = 121,
  Bauer = 122,
  Bedford = 123,
  Beifanj = 124,
  Benford = 125,
  Bianco = 126,
  Bitelli = 127,
  Blawknox = 128,
  BlowKnix = 129,
  Bmc = 130,
  Bobcat = 131,
  Bomag = 132,
  Boss = 133,
  Bower = 134,
  Broce = 135,
  Bt = 136,
  Bucher = 137,
  Buell = 138,
  Bufori = 139,
  Buggy = 140,
  Busscar = 141,
  Busun = 142,
  Byd = 143,
  Carbodies = 144,
  Carmix1 = 145,
  Casagrande = 146,
  Case = 147,
  Cedarapids = 148,
  Chana = 149,
  ChangJiang = 150,
  Clark = 151,
  Cleveland = 152,
  Cmi = 153,
  Cobra = 154,
  Coles = 155,
  Condor = 156,
  Conmex = 157,
  Cpcd = 158,
  Crane = 159,
  Dadiauto = 160,
  Daf = 161,
  Dalian = 162,
  Demag = 163,
  Dennis = 164,
  Desparado = 165,
  Ditchwitch = 166,
  DivMagEmb = 167,
  DongFeng = 168,
  Doosan = 169,
  Ducati = 170,
  Dynapac = 171,
  Edsel = 172,
  Escorts = 173,
  Essex = 174,
  Esslingen = 175,
  Excalibur = 176,
  Faw = 177,
  Ferrara = 178,
  Fiatallis = 179,
  Forland = 180,
  Fudi = 181,
  Fumec = 182,
  Fuqi = 183,
  Furukawa = 184,
  Fushun = 185,
  Fuwacrane = 186,
  Gehl = 187,
  Genie = 188,
  GermanBoucher = 189,
  Ginaf = 190,
  Godrej = 191,
  GoldenDragon = 192,
  Gonow = 193,
  Greatwall = 194,
  GrigioExcalibu = 195,
  Grove = 196,
  Haima = 197,
  Halla = 198,
  Hamm = 199,
  Hanatoo = 200,
  HangCha = 201,
  Hangzhou = 202,
  Hanta = 203,
  Harlan = 204,
  HarleyDavidson = 205,
  Hasarost = 206,
  Haulotte = 207,
  Heli = 208,
  Higer = 209,
  Hofmann = 210,
  Hongyan = 211,
  Hormann = 212,
  Howo = 213,
  HuLift = 214,
  Hummer = 215,
  Husqvarng = 216,
  Hyco = 217,
  Hyosung = 218,
  Hyster = 219,
  Ihi = 220,
  Ingersoll = 221,
  International = 222,
  Istana = 223,
  Iveco = 224,
  Ivnovec = 225,
  Jac = 226,
  Jcl = 227,
  Jiefang = 228,
  Jinbei = 229,
  Jinma = 230,
  Jlg = 231,
  Jmstar = 232,
  JohnDeere = 233,
  Jr = 234,
  Kai = 235,
  Kaito = 236,
  Kalbnaes = 237,
  Kalmar = 238,
  Kamag = 239,
  Kamaz = 240,
  Kenworth = 241,
  Koehring = 242,
  Krupp = 243,
  Ktm = 244,
  Lada = 245,
  Lambretta = 246,
  LancerBoss = 247,
  Lansing = 248,
  Leyland = 249,
  Liebherr = 250,
  Lifan = 251,
  Ligier = 252,
  Lima = 253,
  Linde = 254,
  Linhai = 255,
  LinkBelt = 256,
  Liugong = 257,
  Locatelli = 258,
  Lull = 259,
  Luoyang = 260,
  Mack = 261,
  Magrius = 262,
  Mahindra = 263,
  Man = 264,
  Manitou = 265,
  Manitwoc = 266,
  Manjusta = 267,
  Marini = 268,
  Massey = 269,
  Maybach = 270,
  MazTractor = 271,
  Mecbo = 272,
  Meiwa = 273,
  MertzVibrator = 274,
  Mitsu = 275,
  Mol = 276,
  Morgan = 277,
  MoroTruck = 278,
  Morooka = 279,
  MotoGuzzi = 280,
  Mtr = 281,
  Mudan = 282,
  Multitor = 283,
  Mvagusta = 284,
  Nashambassador = 285,
  NastyBoy = 286,
  NeoPlan = 287,
  Newholland = 288,
  Nichiyu = 289,
  Nicholas = 290,
  Niigata = 291,
  NiponSharyo = 292,
  Nisseki = 293,
  Nl = 294,
  Noble = 295,
  NortonCommando = 296,
  Nyk = 297,
  OAndK = 298,
  Orientstar = 299,
  Oshkosh = 300,
  PAndH = 301,
  Pagani = 302,
  Patrick = 303,
  Pegasus = 304,
  PengPu = 305,
  Perlini = 306,
  PeterbiltModel = 307,
  Pettibone = 308,
  Pheaton = 309,
  Piaggio = 310,
  Piccini = 311,
  Pipeline = 312,
  Platform = 313,
  Polaris = 314,
  Polarsun = 315,
  Powerplus = 316,
  Proffi = 317,
  Protec = 318,
  Puma = 319,
  Puyuan = 320,
  Qingqi = 321,
  Randon = 322,
  Raptor = 323,
  Record = 324,
  Rewaco = 325,
  Rhino = 326,
  Rinspeed = 327,
  RockyD = 328,
  Rosco = 329,
  Sakai = 330,
  Sandvik = 331,
  Sany = 332,
  Sard = 333,
  Saurer = 334,
  Scammel = 335,
  Schwing = 336,
  Sdlg = 337,
  Seadoo = 338,
  Sennebogen = 339,
  SercelMertz = 340,
  SewerSanitary = 341,
  Shaanxi = 342,
  Shac = 343,
  Shacman = 344,
  Shantui = 345,
  ShenyangLeilon = 346,
  Shibaura = 347,
  Shifeng = 348,
  Shinko = 349,
  Silla = 350,
  Silverwing = 351,
  SinoTruck = 352,
  Sisu = 353,
  SkidSteer = 354,
  Skoda = 355,
  Smv = 356,
  Soilmec = 357,
  Soosung = 358,
  SoyatJunda = 359,
  Sta = 360,
  Stade = 361,
  Sterling = 362,
  Steyra = 363,
  Still = 364,
  Studebaker = 365,
  Styer = 366,
  Sumitomo = 367,
  Sunvoyager = 368,
  Sunward = 369,
  Sve = 370,
  Tamrock = 371,
  Tata = 372,
  TataDaewoo = 373,
  Tennant = 374,
  Terex = 375,
  Tgt = 376,
  Thwaites = 377,
  Tiger = 378,
  Tokyu = 379,
  Toyo = 380,
  ToyotaSienna = 381,
  Trackjet = 382,
  Trencher = 383,
  Triump = 384,
  Trivelsonda = 385,
  Truimph = 386,
  TukTuk = 387,
  Universal = 388,
  Uraim = 389,
  Ural = 390,
  Urbanuss = 391,
  Vantage = 392,
  Vermeer = 393,
  Veryca = 394,
  Vespa = 395,
  Vibrator = 396,
  Vibromax = 397,
  Vmoto = 398,
  Vogele = 399,
  Volat = 400,
  Voltas = 401,
  Watanabe = 402,
  Weichai = 403,
  Wiggins = 404,
  Windham = 405,
  Wombat = 406,
  Wonjan = 407,
  Wuzhoulong = 408,
  Xcmg = 409,
  Xgma = 410,
  Xilin = 411,
  Xinkai = 412,
  Yale = 413,
  Yanmar = 414,
  Yinxiang = 415,
  Yto = 416,
  Yuchai = 417,
  Bugatti = 418,
  AwmMotor = 419,
  Bell = 420,
  DongfengTruck = 421,
  FlatbedTrailer = 422,
  Foton = 423,
  FwMec50C = 424,
  HowoTractor = 425,
  HyMastVl50H = 426,
  Jmc = 427,
  Johnston = 428,
  Kylin = 429,
  Royalenfield = 430,
  Shenlong = 431,
  SkidFteer = 432,
  TransMark1 = 433,
  VijaySuper = 434,
  Wacker = 435,
  Zoomlion = 436,
  Astra = 437,
  WesternStar = 438,
  Keto = 439,
  Aeon = 440,
  Victory = 441,
  Leo = 442,
  Orbit = 443,
  Matador = 444,
  CanAm = 445,
  Samand = 446,
  Renli = 447,
  Kudo = 448,
  Caterham = 449,
  Radical = 450,
  Vdl = 451,
  Camc = 452,
  Gaobida = 453,
  Phoenix = 454,
  BlueBird = 455,
  UdTrucks = 456,
  Kymco = 457,
  Watco = 458,
  Eicher = 459,
  Vauxhall = 460,
  Chery = 461,
  Senke = 462,
  Optare = 463,
  KandiVehicle = 464,
  Baw = 465,
  Konker = 466,
  Schopf = 467,
  Trepel = 468,
  Cectek = 469,
  HydraTerra = 470,
  Dulevo = 471,
  Lektro = 472,
  Yangzi = 473,
  Jonway = 474,
  Tpt449 = 475,
  Tuf320 = 476,
  Tut419 = 477,
  KingLong = 478,
  Otokar = 479,
  Saxon = 480,
  Tgb = 481,
  Shineray = 482,
  StompJuicebox = 483,
  AvelingBarford = 484,
  Geely = 485,
  Leopard = 486,
  Yutong = 487,
  Tvr = 488,
  Dfsk = 489,
  Ravo = 490,
  Viper = 491,
  Brilliant = 492,
  JohnnyPag = 493,
  Daifeng = 494,
  Dayun = 495,
  Aprilia = 496,
  ChengLong = 497,
  Suski = 498,
  Juno = 499,
  DeMacross = 500,
  Walton = 501,
  Marchetti = 502,
  Designline = 503,
  Wuhan = 504,
  Coda = 505,
  Sunwin = 506,
  GrandItalia = 507,
  Maeda = 508,
  Youngman = 509,
  Bonluck = 510,
  Gilera = 511,
  Gasgas = 512,
  Lito = 513,
  Bozzies = 514,
  Beiben = 515,
  Temsa = 516,
  Mclaren = 517,
  Ua = 518,
  Vip = 519,
  Tld = 520,
  Vpg = 521,
  Omw = 522,
  Tiffin = 523,
  Goupil = 524,
  Lazareth = 525,
  Columbia = 526,
  Ursus = 527,
  Zero = 528,
  Grandeur = 529,
  Terberg = 530,
}

export enum PermitIssuingAuthorityCode {
  MinistryOfEnviromentAndWater = 1,
  DmFoodSafety = 2,
  DubaiPolice = 3,
  DubaiMunicipalityEnvironmentDepartment = 4,
  MinistryOfInterior = 5,
  MinistryOfHealth = 6,
  NationalMediaCouncil = 7,
  CentralBank = 8,
  CabinetAffairs = 9,
  CustomsAuthority = 10,
  DubaiCommAndMetalCenter = 11,
  DubaiCustoms = 12,
  DubaiMunicipality = 13,
  EmiratesStandardizationAndSpecification = 14,
  FederalEnvironmentAgency = 15,
  FromHisHighnessPresident = 16,
  GeneralSecretariatOfMuncipalities = 17,
  MinistryOfEconomic = 18,
  MinistryOfFinanceAndIndustry = 19,
  MinistryOfInformation = 20,
  MinistryOfPower = 21,
  NationalInformationOffice = 22,
  TelecommunicationsRegulatoryAuthority = 23,
  HQCoastGurdGroup = 24,
  Other = 25,
  FederalAuthorityForNuclearRegulation = 26,
  GeneralCivilAviationAuthority = 27,
  UAEKPOffice = 28,
  HealthAndSafetyDepartmentDubaiMunicipality = 29,
  FederalTaxAuthority = 30,
}

export enum ExemptionType {
  PoliceAndMiliatary = 1001,
  DiplomaticAndConsular = 1002,
  IndustrialExemption = 1003,
  ProductsOfAgCCCountries = 1004,
  NotForLocalRelease = 1005,
  UsedPersonalEffects = 1006,
  ReturnGoods = 1007,
  ShortLandedGoods = 1008,
  AuctionGoods = 1009,
  ShipShoreShipOrAirToAir = 1010,
  GoodsToBeDestructed = 1012, //no 1011
  CharitableSocieties = 1013,
  DutyToBeClaimedFromOtherGCCCountry = 1014,
  FreeTradeAgreement = 1015,
  GCCUnifiedTariffExemption = 1016,
  CWConsignments = 1017,
  FreeZoneConsignments = 1018,
  TransferOfGoods = 1019,
  StatisticalExport = 1020,
  CourierService = 1022, //no 1021
  BondedMovement = 1023,
  CivilAircraftSparePartsToBeUsedInGCCStatesAirPortZones = 1024,
  MovementControlledByCustoms = 1025,
  AccrediatedClient = 1026,
  ToBeClearedUnderDeposit = 1027,
  Expo2020 = 1029, //no 1028
  Diamonds = 1030,
  SpecialNeeds = 1031,
  FuelExemption = 1032,
  GoodsConsumptionWithinFz = 1034,
} //asumption TIR carnet 1033 not needed.

export enum ReturnReason {
  Undelivered = '0',
  RejectedByCustomer = '1',
  ReturnedByCustomer = '2',
}

export enum ReturnReasonUi {
  Undelivered = 0,
  RejectedByCustomer = 1,
  ReturnedByCustomer = 2,
}

export enum CustomsStatus {
  Submitted = 'Submitted',
  Cleared = 'Cleared',
  ClearanceSubjectToInspection = 'Clearance subject to Inspection',
  ReleaseForInspection = 'Release for Inspection',
  Detained = 'Detained',
  Suspend = 'Suspend',
  Cancelled = 'Cancelled',
  Declined = 'Declined',
  Rejected = 'Rejected',
  Error = 'Error',
}

export enum DocumentType {
  Declaration = 'DECLARATION',
  Claim = 'NR_CLAIM',
}

export enum AddressType {
  bill = 'BILL',
  ship = 'SHIP',
  sold = 'SOLD',
}

export enum ContractType {
  SubmitOrder = 'SubmitOrder',
  UpdateTransportInfo = 'UpdateTransportInfo',
  InitiateDeclaration = 'InitiateDeclaration',
  DeliverOrder = 'DeliverOrder',
  ConfirmReturnDelivery = 'ConfirmReturnDelivery',
  UpdateExitConfirmation = 'UpdateExitConfirmation',
}

export enum ContractMethod {
  SubmitOrderModeBasic = 'SubmitOrderModeBasic',
  SubmitOrderModeFinal = 'SubmitOrderModeFinal',
  SubmitOrderModeUpdate = 'SubmitOrderModeUpdate',
  SubmitOrderModeReturn = 'SubmitOrderModeReturn',
  SubmitOrderModeCancel = 'SubmitOrderModeCancel',
  UpdateTransportInfo = 'UpdateTransportInfo',
  UpdateTransportInfoModeReturn = 'UpdateTransportInfoModeReturn',
  UpdateTransportInfoModeUpdate = 'UpdateTransportInfoModeUpdate',
  InitiateDeclaration = 'InitiateDeclaration',
  DeliverOrder = 'DeliverOrder',
  DeliverOrderModeReturn = 'DeliverOrderModeReturn',
  ConfirmReturnDelivery = 'ConfirmReturnDelivery',
  UpdateExitConfirmation = 'UpdateExitConfirmation',
}
