version: '3.4'

services:
  transcomm_datagen:
    build:
      dockerfile: ./docker/datagen/Dockerfile
      args:
        DATABASE_URL: ${DATAGEN_DATABASE_URL}
    ports:
      - '2020:2020'
    restart: always
    environment:
      QUEUE_HOST: 'redis'
      QUEUE_PORT: 6379
      KAFKA_BROKERS: ${KAFKA_BROKERS}
      KAFKA_GROUP_ID: ${DATAGEN_KAFKA_GROUP_ID}
      HYPERLEDGER_URL: ${HYPERLEDGER_URL}
      HYPERLEDGER_CLIENT_ID: ${HYPERLEDGER_CLIENT_ID}
      HYPERLEDGER_CHANNEL_NAME: ${HYPERLEDGER_CHANNEL_NAME}
      HYPERLEDGER_CHAINCODE_NAME: ${HYPERLEDGER_CHAINCODE_NAME}
      HYPERLEDGER_USER_ID: ${HYPERLEDGER_USER_ID}
      HYPERLEDGER_ORGANIZATION_CODE: ${HYPERLEDGER_ORGANIZATION_CODE}
      AXIOS_RETRY_COUNT: ${AXIOS_RETRY_COUNT}
      AUTO_RETRIES: ${AUTO_RETRIES}
      AUTO_RETRIES_INTERVAL: ${AUTO_RETRIES_INTERVAL}
      DATAGEN_URL: ${DATAGEN_URL}
      DATAGEN_PUBLIC_URL: ${DATAGEN_PUBLIC_URL}
      KAFKA_TOPIC_BLESS_COMMON_APP_OUTPUT: ${KAFKA_TOPIC_BLESS_COMMON_APP_OUTPUT}
      DATAGEN_KAFKA_SENDER_IDENTITY: ${DATAGEN_KAFKA_SENDER_IDENTITY}
      DATAGEN_KAFKA_RECEIVERS: ${DATAGEN_KAFKA_RECEIVERS}
      DATAGEN_APPLICATION_ID: ${DATAGEN_APPLICATION_ID}
      DATAGEN_KAFKA_EXCEPTION_MESSAGE_TYPE: ${DATAGEN_KAFKA_EXCEPTION_MESSAGE_TYPE}
      DATAGEN_KAFKA_AUDIENCE: ${DATAGEN_KAFKA_AUDIENCE}
      DATAGEN_KAFKA_EXCEPTION_RECEIVERS: ${DATAGEN_KAFKA_EXCEPTION_RECEIVERS}
      SUBMITORDER_ORDER_DATA_MESSAGE_TYPE: ${SUBMITORDER_ORDER_DATA_MESSAGE_TYPE}
      SUBMITORDER_INVOICE_DATA_MESSAGE_TYPE: ${SUBMITORDER_INVOICE_DATA_MESSAGE_TYPE}
      UPDATETRANSPORTINFO_ORDER_DATA_MESSAGE_TYPE: ${UPDATETRANSPORTINFO_ORDER_DATA_MESSAGE_TYPE}
      UPDATETRANSPORTINFO_INVOICE_DATA_MESSAGE_TYPE: ${UPDATETRANSPORTINFO_INVOICE_DATA_MESSAGE_TYPE}
      UPDATETRANSPORTINFO_DECLARATION_JSON_MAPPING_MESSAGE_TYPE: ${UPDATETRANSPORTINFO_DECLARATION_JSON_MAPPING_MESSAGE_TYPE}
      UPDATETRANSPORTINFO_DOCUMENTTRACKING_MESSAGE_TYPE: ${UPDATETRANSPORTINFO_DOCUMENTTRACKING_MESSAGE_TYPE}
      INITIATEDECLARATION_ORDER_DATA_MESSAGE_TYPE: ${INITIATEDECLARATION_ORDER_DATA_MESSAGE_TYPE}
      INITIATEDECLARATION_DECLARATION_JSON_MAPPING_MESSAGE_TYPE: ${INITIATEDECLARATION_DECLARATION_JSON_MAPPING_MESSAGE_TYPE}
      INITIATEDECLARATION_DOCUMENTTRACKING_MESSAGE_TYPE: ${INITIATEDECLARATION_DOCUMENTTRACKING_MESSAGE_TYPE}
      INITIATEDECLARATION_INVOICE_DATA_MESSAGE_TYPE: ${INITIATEDECLARATION_INVOICE_DATA_MESSAGE_TYPE}
      UPDATEEXITCONFIRMATION_DOCUMENTTRACKING_MESSAGE_TYPE: ${UPDATEEXITCONFIRMATION_DOCUMENTTRACKING_MESSAGE_TYPE}
      UPDATEEXITCONFIRMATION_CLAIM_REQUEST_MESSAGE_TYPE: ${UPDATEEXITCONFIRMATION_CLAIM_REQUEST_MESSAGE_TYPE}
      UPDATEEXITCONFIRMATION_INVOICE_DATA_MESSAGE_TYPE: ${UPDATEEXITCONFIRMATION_INVOICE_DATA_MESSAGE_TYPE}
      DELIVERORDER_INVOICE_DATA_MESSAGE_TYPE: ${DELIVERORDER_INVOICE_DATA_MESSAGE_TYPE}
      DELIVERORDER_ORDER_DATA_MESSAGE_TYPE: ${DELIVERORDER_ORDER_DATA_MESSAGE_TYPE}
      CONFIRMRETURNDELIVERY_ORDER_DATA_MESSAGE_TYPE: ${CONFIRMRETURNDELIVERY_ORDER_DATA_MESSAGE_TYPE}
      CONFIRMRETURNDELIVERY_INVOICE_DATA_MESSAGE_TYPE: ${CONFIRMRETURNDELIVERY_INVOICE_DATA_MESSAGE_TYPE}
      DECLARATION_STATUS_CHANGE_DOCUMENTTRACKING_MESSAGE_TYPE: ${DECLARATION_STATUS_CHANGE_DOCUMENTTRACKING_MESSAGE_TYPE}
      CLAIM_STATUS_CHANGE_DOCUMENTTRACKING_MESSAGE_TYPE: ${UPDATEEXITCONFIRMATION_DOCUMENTTRACKING_MESSAGE_TYPE}
      UPDATEEXITCONFIRMATION_ORDER_DATA_MESSAGE_TYPE: ${UPDATEEXITCONFIRMATION_ORDER_DATA_MESSAGE_TYPE}
      LOGGING_LEVEL: ${LOGGING_LEVEL}
      HL_QUEUE_RETRY_ATTEMPTS: ${HL_QUEUE_RETRY_ATTEMPTS}
      HL_QUEUE_RETRY_DELAY: ${HL_QUEUE_RETRY_DELAY}
      STARTING_BLOCK: ${STARTING_BLOCK}
      HASHICORP_VAULT_URL: ${HASHICORP_VAULT_URL}
      HASHICORP_SECRET_ADDRESS: ${HASHICORP_SECRET_ADDRESS}
      HASHICORP_DHL_CODE_LOOKUP: ${HASHICORP_DHL_CODE_LOOKUP}
      HASHICORP_SHARED_KEY_LOOKUP: ${HASHICORP_SHARED_KEY_LOOKUP}
      HASHICORP_USERNAME: ${HASHICORP_USERNAME}
      HASHICORP_PASSWORD: ${HASHICORP_PASSWORD}
      HASHICORP_ROOT_PATH: ${HASHICORP_ROOT_PATH}
      RLT_VALUE: ${RLT_VALUE}
      RLT_TIME: ${RLT_TIME}
      RATELIMTER_ACTIVE: ${RATELIMTER_ACTIVE}
      CUSTOMER_BUSINESS_CODES: ${CUSTOMER_BUSINESS_CODES}
      # YNAP_BUSINESS_CODE: ${YNAP_BUSINESS_CODE}
      # LUXC_BUSINESS_CODE: ${LUXC_BUSINESS_CODE}
      # YNAP_ACCOUNT_NUMBER: ${YNAP_ACCOUNT_NUMBER}
      # LUXC_ACCOUNT_NUMBER: ${LUXC_ACCOUNT_NUMBER}
      # YNAP_BROKER_CUSTOMER_CODE: ${YNAP_BROKER_CUSTOMER_CODE}
      # LUXC_BROKER_CUSTOMER_CODE: ${LUXC_BROKER_CUSTOMER_CODE}
      # YNAP_CARGO_HANDLER_PREMISE_CODE: ${YNAP_CARGO_HANDLER_PREMISE_CODE}
      # LUXC_CARGO_HANDLER_PREMISE_CODE: ${LUXC_CARGO_HANDLER_PREMISE_CODE}
      DHL_BUSINESS_CODE: ${DHL_BUSINESS_CODE}

    volumes:
      - /opt/docker/backend_datagen_volume/:/usr/test/

    depends_on:
      - redis
      - transcomm_datagen_migration
  transcomm_datagen_migration:
    build:
      context: ./
      dockerfile: ./docker/datagen/database-migration/Dockerfile
      args:
        DATABASE_URL: ${DATAGEN_DATABASE_URL}
  transcomm_backend_migration:
    build:
      context: ./
      dockerfile: ./docker/transcomm-backend/database-migration/Dockerfile
      args:
        DATABASE_URL: ${TRANSCOMM_BACKEND_DATABASE_URL}
  transcomm_backend:
    build:
      args:
        DATABASE_URL: ${TRANSCOMM_BACKEND_DATABASE_URL}
    ports:
      - '3030:3030'
    restart: always
    environment:
      KAFKA_TOPIC_CUSTOMS: ${KAFKA_TOPIC_CUSTOMS}
      KAFKA_TOPIC_PICKUPS_MOVEMENTS: ${KAFKA_TOPIC_PICKUPS_MOVEMENTS}
      KAFKA_TOPIC_BLESS_COMMON_APP_OUTPUT: ${KAFKA_TOPIC_BLESS_COMMON_APP_OUTPUT}
      KAFKA_RETURN_TRANSCOM_TOPIC: ${KAFKA_RETURN_TRANSCOM_TOPIC}
      KAFKA_BROKERS: ${KAFKA_BROKERS}
      KAFKA_GROUP_ID: ${TRANSCOMM_BACKEND_KAFKA_GROUP_ID}
      DATAGEN_URL: ${DATAGEN_URL}
      SUBMITORDER_ORDER_DATA_MESSAGE_TYPE: ${SUBMITORDER_ORDER_DATA_MESSAGE_TYPE}
      SUBMITORDER_INVOICE_DATA_MESSAGE_TYPE: ${SUBMITORDER_INVOICE_DATA_MESSAGE_TYPE}
      BLESS_NEW_ORDER_MESSAGE_TYPE: ${BLESS_NEW_ORDER_MESSAGE_TYPE}
      BLESS_CONFIRM_RETURN_DELIVERY_MESSAGE_TYPE: ${BLESS_CONFIRM_RETURN_DELIVERY_MESSAGE_TYPE}
      BLESS_HYPERLEDGER_MESSAGE_TYPES: ${BLESS_HYPERLEDGER_MESSAGE_TYPES}
      BLESS_NEW_PICKUP_MESSAGE_TYPE: ${BLESS_NEW_PICKUP_MESSAGE_TYPE}
      BLESS_NEW_MASTER_MOVEMENT_MESSAGE_TYPE: ${BLESS_NEW_MASTER_MOVEMENT_MESSAGE_TYPE}
      BLESS_NEW_DETAIl_MOVEMENT_MESSAGE_TYPE: ${BLESS_NEW_DETAIl_MOVEMENT_MESSAGE_TYPE}
      BLESS_DECLARATION_REQUEST_EXPORT_MESSAGE_TYPE: ${BLESS_DECLARATION_REQUEST_EXPORT_MESSAGE_TYPE}
      BLESS_DECLARATION_REQUEST_IMPORT_MESSAGE_TYPE: ${BLESS_DECLARATION_REQUEST_IMPORT_MESSAGE_TYPE}
      BLESS_DECLARATION_RESPONSE_EXPORT_MESSAGE_TYPE: ${BLESS_DECLARATION_RESPONSE_EXPORT_MESSAGE_TYPE}
      BLESS_DECLARATION_RESPONSE_IMPORT_MESSAGE_TYPE: ${BLESS_DECLARATION_RESPONSE_IMPORT_MESSAGE_TYPE}
      EVENTSTORE_CONNECTION_STRING: 'esdb://db_eventstore:2113?tls=false'
      AUTO_RETRIES_INTERVAL: ${AUTO_RETRIES_INTERVAL}
      AUTO_RETRIES: ${AUTO_RETRIES}
      SUPERADMIN_EMAIL: ${SUPERADMIN_EMAIL}
      SUPERADMIN_HASHED_PASSWORD: ${SUPERADMIN_HASHED_PASSWORD}
      LOGGING_LEVEL: ${LOGGING_LEVEL}
      BUSINESS_EXCEPTION_MSG_TYPE: ${BUSINESS_EXCEPTION_MSG_TYPE}
      DATAGEN_KAFKA_SENDER_IDENTITY: ${DATAGEN_KAFKA_SENDER_IDENTITY}
      DATAGEN_KAFKA_RECEIVERS: ${DATAGEN_KAFKA_RECEIVERS}
      DATAGEN_KAFKA_EXCEPTION_MESSAGE_TYPE: ${DATAGEN_KAFKA_EXCEPTION_MESSAGE_TYPE}
      DATAGEN_KAFKA_EXCEPTION_RECEIVERS: ${DATAGEN_KAFKA_EXCEPTION_RECEIVERS}
      DATAGEN_APPLICATION_ID: ${DATAGEN_APPLICATION_ID}
      DATAGEN_KAFKA_AUDIENCE: ${DATAGEN_KAFKA_AUDIENCE}
      DATAGEN_ACTIVE: ${DATAGEN_ACTIVE}
      autoUpdateExitConfirmationTimeout: ${autoUpdateExitConfirmationTimeout}
    volumes:
      - /opt/docker/backend_datagen_volume/:/usr/test/

    depends_on:
      - transcomm_backend_migration
      - transcomm_datagen
      - db_eventstore
  transcomm_ui:
    build:
      dockerfile: ./docker/transcomm-ui/Dockerfile
    ports:
      - '6401:8080'
    environment:
      NODE_ENV: production
      NGINX_HOST: beta-regulator.blesstrace.com
      NGINX_PORT: 80
    restart: always
    depends_on:
      - transcomm_backend
      - transcomm_datagen
  redis:
    ports:
      - '6379:6379'
  db_eventstore:
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - '1113:1113'
      - '2113:2113'
    volumes:
      - type: volume
        source: eventstore-volume-data
        target: /var/lib/eventstore
      - type: volume
        source: eventstore-volume-logs
        target: /var/log/eventstore

volumes:
  eventstore-volume-data:
  eventstore-volume-logs: